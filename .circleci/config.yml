version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6
      - image: rabbitmq:3.6.6
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - restore_cache:
          key: deps9-{{ .Branch }}-{{ checksum "setup.py" }}-{{ checksum "devRequirements.txt" }}
      - run:
          command: |
            sudo pip install pipenv
            pipenv install -e .
            pipenv install -r devRequirements.txt
      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "setup.py" }}-{{ checksum "devRequirements.txt" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.6/site-packages"
      - run:
          command: |
            INTEGRATION_TEST=true pipenv run "nosetests"
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: tr1
deploy:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout

      - restore_cache:
          key: deps9-{{ .Branch }}-{{ checksum "setup.py" }}

      - run:
          name: install python dependencies
          command: |
            sudo pip install pipenv
            pipenv install -e .
            pipenv install twine

      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "setup.py" }}
          paths:
            - "venv"

      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USERNAME" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: upload to pypi
          command: |
            pipenv run "python setup.py bdist_wheel --universal"
            pipenv run "twine upload --username ${PYPI_USERNAME} --password ${PYPI_PASSWORD} dist/*"

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              only:
                - master
